name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  # -----------------
  # Lint + Test
  # -----------------
  lint-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci
      - run: npm run lint
      - run: npm test

  # -----------------
  # Dependency Review
  # -----------------
  dependency-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Run npm audit
        run: npm audit --production --audit-level=moderate || true

      - name: GitHub Dependency Review
        uses: actions/dependency-review-action@v4

  # -----------------
  # CodeQL Scan
  # -----------------
  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # -----------------
  # Codacy Scan
  # -----------------
  codacy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          api-token: ${{ secrets.CODACY_API_TOKEN }}
          tool: eslint
          format: sarif
          output: results.sarif

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  # -----------------
  # SonarQube
  # -----------------
  sonarqube:
  if: ${{ secrets.SONAR_TOKEN != '' }}
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v4
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v2
      with:
        args: >
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
